name: CI - Full Pipeline

on:
  push:
    branches: [main]
    tags:
      - 'v*.*.*'
  pull_request:

jobs:
  build:
    name: Build & Test
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Set up JDK 23
        uses: actions/setup-java@v3
        with:
          java-version: '23'
          distribution: 'temurin'

      - name: Make Gradle executable
        run: chmod +x ./gradlew

      - name: Spotless Check
        run: ./gradlew spotlessCheck

      - name: Build and Run Tests
        run: ./gradlew build test --no-daemon

      - name: Generate Jacoco Report
        run: ./gradlew jacocoTestReport

      - name: Print Build Version
        run: ./gradlew printVersion

  sonarcloud:
    name: SonarCloud Analysis
    runs-on: ubuntu-latest
    needs: build
    if: github.event_name == 'push' || github.event_name == 'pull_request'

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up JDK 23
        uses: actions/setup-java@v3
        with:
          java-version: '23'
          distribution: 'temurin'

      - name: Generate coverage
        run: ./gradlew jacocoTestReport

      - name: SonarCloud Analysis
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          ./gradlew sonar \
            -Dsonar.projectKey=marcoslozina_template-service \
            -Dsonar.organization=marcoslozina \
            -Dsonar.host.url=https://sonarcloud.io \
            -Dsonar.token=$SONAR_TOKEN

  release:
    name: Release Build & Changelog
    runs-on: ubuntu-latest
    needs: build
    if: startsWith(github.ref, 'refs/tags/v')

    steps:
      - uses: actions/checkout@v3

      - name: Set up JDK 23
        uses: actions/setup-java@v3
        with:
          java-version: '23'
          distribution: 'temurin'

      - name: Make Gradle executable
        run: chmod +x ./gradlew

      - name: Build project
        run: ./gradlew clean build --no-daemon

      - name: Package Jar
        run: |
          mkdir -p release
          cp build/libs/*.jar release/

      - name: Generate Changelog
        id: changelog
        uses: mikepenz/release-changelog-builder-action@v4
        with:
          configuration: ".github/changelog-config.json"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          files: release/*.jar
          body: ${{ steps.changelog.outputs.changelog }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

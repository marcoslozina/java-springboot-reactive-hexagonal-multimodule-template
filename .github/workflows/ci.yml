name: CI - Full Pipeline

on:
  push:
    branches: [main]
    tags:
      - 'v*.*.*'
  pull_request:

permissions:
  contents: write

env:
  RUN_SONAR: ${{ vars.RUN_SONAR }}

jobs:
  build:
    name: Build & Test
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up JDK 23
        uses: actions/setup-java@v3
        with:
          java-version: '23'
          distribution: 'temurin'

      - name: Make Gradle executable
        run: chmod +x ./gradlew

      - name: Spotless Check
        run: ./gradlew spotlessCheck

      - name: Build and Run Tests
        run: ./gradlew build test --no-daemon

      - name: Generate Jacoco Root Report
        run: ./gradlew jacocoRootReport

      - name: Upload Jacoco Root Report
        uses: actions/upload-artifact@v4
        with:
          name: jacoco-root-report
          path: build/reports/jacoco/jacocoRootReport/jacocoRootReport.xml
          if-no-files-found: error

      - name: Print Build Version
        run: ./gradlew printVersion

  sonarcloud:
    name: SonarCloud Analysis
    runs-on: ubuntu-latest
    needs: build
    if: ${{ vars.RUN_SONAR == 'true' }}

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up JDK 23
        uses: actions/setup-java@v3
        with:
          java-version: '23'
          distribution: 'temurin'

      - name: Download Jacoco Root Report
        uses: actions/download-artifact@v4
        with:
          name: jacoco-root-report
          path: build/reports/jacoco/jacocoRootReport

      - name: Confirm Jacoco File Exists
        run: ls -lah build/reports/jacoco/jacocoRootReport

      - name: SonarCloud Analysis
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          ./gradlew sonar \
            -Dsonar.projectKey=marcoslozina_template-service \
            -Dsonar.organization=marcoslozina \
            -Dsonar.host.url=https://sonarcloud.io \
            -Dsonar.token=$SONAR_TOKEN \
            -Dsonar.coverage.jacoco.xmlReportPaths=${{ github.workspace }}/build/reports/jacoco/jacocoRootReport/jacocoRootReport.xml \
            -Dsonar.sources=domain/src/main/java,adapters/in/rest/src/main/java,adapters/out/messaging/src/main/java,adapters/out/persistence/src/main/java \
            -Dsonar.tests=domain/src/test/java,adapters/in/rest/src/test/java \
            -Dsonar.exclusions=**/build/**,**/resources/**,**/*.kt \
            -Dsonar.coverage.exclusions=**/Application.java \
            -Dsonar.test.inclusions=**/*Test.java \
            -Dsonar.java.binaries=domain/build/classes/java/main,adapters/in/rest/build/classes/java/main,adapters/out/messaging/build/classes/java/main,adapters/out/persistence/build/classes/java/main

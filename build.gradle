plugins {
    // Core plugins
    id 'java'
    id 'org.springframework.boot' version "${springBootVersion}"
    id 'io.spring.dependency-management' version "${dependencyManagementVersion}"

    // Code Quality & Static Analysis
    id 'com.diffplug.spotless' version "${spotlessVersion}"
    id 'pmd'
    id 'checkstyle'
    id 'org.sonarqube' version "${sonarQubeVersion}"

    // Security & Dependency Management
    id 'org.owasp.dependencycheck' version "${owaspDependencyCheckVersion}"
    id 'com.github.ben-manes.versions' version "${benManesVersion}"

    // Test Coverage & Auditing
    id 'jacoco'
}

group = 'com.company.templateservice'
version = '1.0.0-RELEASE'

def javaVersion = file("${rootDir}/java.version").text.trim().toInteger()
java {
    toolchain {
        languageVersion.set(JavaLanguageVersion.of(javaVersion.toInteger()))
    }
}

springBoot {
    mainClass.set("com.company.templateservice.Application")
}

// Dependencies
dependencies {
    // Observability & Monitoring
    implementation "io.micrometer:micrometer-registry-prometheus:${micrometerVersion}"
    implementation "org.springframework.cloud:spring-cloud-starter-vault-config"

    // API Testing & Mocks
    testImplementation "com.github.tomakehurst:wiremock-jre8:${wiremockVersion}"
    testImplementation "io.rest-assured:rest-assured:${restAssuredVersion}"
    testImplementation "org.junit.jupiter:junit-jupiter-api:${junitVersion}"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:${junitVersion}"
}

// Custom Tasks
tasks.register('audit') {
    dependsOn 'checkAll'
}

// External Configurations
apply from: "${rootDir}/gradle/dependencies.gradle"
apply from: "${rootDir}/gradle/quality.gradle"
apply from: "${rootDir}/gradle/testing.gradle"
apply from: "${rootDir}/gradle/observability.gradle"
apply from: "${rootDir}/gradle/security.gradle"